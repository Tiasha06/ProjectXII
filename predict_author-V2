import math

#define all Macros here

DELTA = 0.0001
REF_FILE1 = "C:\\tiashapython\emily1800.txt"
REF_FILE2 = "C:\\tiashapython\Eliot1900.txt"
REF_FILE3 = "C:\\tiashapython\/robert1900.txt"


#ln_prob Function: Takes the reference file, reads it and finds the number of words in it.
#          Takes the dictionary with the count occurences of unique words in the sample text file.
#          If the word in sample text exists in the dict, probability of the words being in ref file
#          is calculated. Returns the summation of ln of probabilities.

def ln_prob(file, wordlist, auth): 
    data = file.read()
    #print(data)
    sum = 0 #initialises sum of 3 array to zero
    list = data.split()
    wordcount = len(wordlist)

    for words in list:
        if words in wordlist:
            x = wordlist.get(words)[auth]
            prob = x/wordcount
            sum = sum + math.log(prob, math.e)

    return sum

def book_dict(filename): #returns dictionary with count occurance for a file
    try:
        bookdict = dict()
        openbook = open(filename, "rt")    #opens ref file in read mode
        for line in openbook:
            for word in line.split():
                if word in bookdict:
                    bookdict[word] = bookdict[word] + 1
                else:
                    bookdict[word] = 1
        openbook.close()
        return bookdict
    except IOError as e:
        print (e)

#function to calculate count occurences of each words and stored in dict
#returns dictionary

def author_dict(): #merges the three dictionaries
    try:
        
        book1 = book_dict(REF_FILE1)
        book2 = book_dict(REF_FILE2)
        book3 = book_dict(REF_FILE3)

        book = {**book1, **book2, **book3}
        for key, value in book.items():
            if key in book1 and key not in book2 and key not in book3:
                book[key] = [book1[key], DELTA, DELTA]
            elif key not in book1 and key in book2 and key not in book3:
                book[key] = [DELTA, book2[key], DELTA]
            elif key not in book1 and key not in book2 and key in book3:
                book[key] = [DELTA, DELTA, book3[key]]
            elif key in book1 and key in book2 and key not in book3:
                book[key] = [book1[key], book2[key], DELTA]
            elif key in book1 and key not in book2 and key in book3:
                book[key] = [book1[key], DELTA, book3[key]]
            elif key not in book1 and key in book2 and key in book3:
                book[key] = [DELTA, book2[key], book3[key]]
            else:
                book[key] = [book1[key], book2[key], value]
        return book
    except IOError as e:
        print (e)


#Main program start

#Sample sentence
sample = input("Enter path of the sample file to be analysed: ")
try:
    compare_dict = author_dict()
    i = 0
    while i <= 2:
        s_author = input("Name of author: ")
        file = open(sample, "rt")
        book_ln = ln_prob(file, compare_dict, i)
        print (f'log likeliness of sample being written by {s_author}', book_ln)
        i = i + 1
        file.close()
except IOError as e:
    print(e)
